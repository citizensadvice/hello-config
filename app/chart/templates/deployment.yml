apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hello.name" . }}
  labels:
    app: {{ template "hello.name" . }}
    env: {{ .Values.metadata.environment }}
    component: web
    chart: {{ template "hello.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "hello.name" . }}
      env: {{ .Values.metadata.environment }}
      component: web
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "hello.name" . }}
        env: {{ .Values.metadata.environment }}
        component: web
    spec:
      securityContext:
        runAsUser: 1000
      containers:
      - name: web
        image: {{ .Values.image.tag | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        # args: ['/bin/sh', '-c', 'rails server -p 3000 -b 0.0.0.0']
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          successThreshold: 1
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        readinessProbe:
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 5
          successThreshold: 1
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        ports:
          - name: http
            containerPort: 3000
        resources:
          limits:
            memory: 512Mi
          requests:
            memory: 512Mi
            cpu: 200m
